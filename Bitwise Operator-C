Task

You will be given an integer n and a threshold ,k. For each number from i through n, find the maximum value of the logical and, or and xor when compared against all 
integers through n that are greater than i. Consider a value only if the comparison returns a result less than k. Print the results of the lines, in that order.

Example
n=3
k=3

The results of the comparisons are below:

a b   and or xor
1 2   0   3  3
1 3   1   3  2
2 3   2   3  1
For the and comparison, the maximum is2 . For the or comparison, none of the values is less than k, so the maximum is 0. For the xor comparison, the maximum value less than k is 2 .
The function should print:
2
0
2

Function Description

Complete the calculate_the_maximum function in the editor below.

calculate_the_maximum has the following parameters:

int n: the highest number to consider
int k: the result of a comparison must be lower than this number to be considered
Prints

Print the maximum values for the and, or and xor comparisons, each on a separate line.

Input Format

The only line contains 2 space-separated integers, n and k .

Constraints
2<=x<=10^3
2<=k<=n

Sample Input 0

5 4
Sample Output 0

2
3
3

Soultion

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
//Complete the following function.


void calculate_the_maximum(int n, int k) {
  //Write your code here.
  int  i, j, and = 0, or = 0, exor = 0;
    for(i = 1; i <= n ; i++){
        for(j = i+1;j <= n;j++){
            //gives required possible combinations for i,j
            if((i&j) < k && (i&j) > and)//checks the max value
            {
                and = i&j;//if conditions is not satisfied the value remains 0
            }
            if((i|j) < k && (i|j) > or)//checks the max value
            {
                or = i|j;//if conditions is not satisfied the value remains 0
            }
            if((i^j) < k && (i^j) > exor)//checks the max value
            {
                exor = i^j;//if conditions is not satisfied the value remains 0
            }
            
        }
    }
    printf("%d\n%d\n%d",and,or,exor);//prints the updated value 
}

int main() {
    int n, k;
  
    scanf("%d %d", &n, &k);
    calculate_the_maximum(n, k);
 
    return 0;
}
